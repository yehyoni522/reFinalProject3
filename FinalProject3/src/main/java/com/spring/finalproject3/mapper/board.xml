<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board">
    
    <!-- 글쓰기  -->
    <insert id="add" parameterType="com.spring.finalproject3.yeonha.BoardVO">
		<if test='fk_seq.equals("")'>
			insert into tbl_board(seq, fk_perno, subject, content, categoryno, good, readCount, regDate, status, commentCount, namecheck, groupno, fk_seq, depthno)
			values(boardSeq.nextval, #{fk_perno}, #{subject}, #{content}, #{categoryno}, default, default, default, default, default, #{namecheck}, #{groupno}, default, default)
		</if>
		
		<if test='!fk_seq.equals("")'>
			insert into tbl_board(seq, fk_perno, subject, content, categoryno, good, readCount, regDate, status, commentCount, namecheck, groupno, fk_seq, depthno)
			values(boardSeq.nextval, #{fk_perno}, #{subject}, #{content}, #{categoryno}, default, default, default, default, default, #{namecheck}, #{groupno}, #{fk_seq}, #{depthno}+1)  
		</if>
	</insert>
	
	<!-- === #116. 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
   	<select id="getTotalCount" parameterType="HashMap" resultType="int">
   		select count(*)
   		from tbl_board
   		where status = 1 and categoryno = #{categoryno}
   		<if test='searchWord != ""'>
   			and lower(${searchType}) like '%'||lower(#{searchWord}) || '%'	
   		</if>
   	</select>
   	
    <!-- 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함 한것) -->
   	<select id="boardListSearchWithPaging" parameterType="HashMap" resultType="com.spring.finalproject3.yeonha.BoardVO">  		
   		select seq, subject, good, readCount, regDate, commentCount, name, namecheck
		       , groupno, fk_seq, depthno
		       , fileName, orgFilename, fileSize
		from
		(
	   		select rownum AS rno, B.seq as seq, B.subject as subject, B.good as good, B.readCount as readCount, B.regDate as regDate, P.name as name
	   				, B.commentCount as commentCount, B.namecheck as namecheck
	   				, groupno, fk_seq, depthno,fileName, orgFilename, fileSize	
			from
			(
			    select seq, subject, good, readCount, commentCount, fk_perno  
					   , to_char(regDate, 'yyyy-mm-dd') as regDate, categoryno, namecheck
					   , groupno, fk_seq, depthno,fileName, orgFilename, fileSize	
			    from tbl_board
			    where status = 1 and categoryno = #{categoryno}
			    <if test='searchWord != ""'>
			    and lower(${searchType}) like '%'||lower(#{searchWord})||'%' 
			    </if>
			    start with fk_seq = 0
	        	connect by prior seq = fk_seq  
				order siblings by groupno desc, seq asc 
			)B
			join tbl_person P
			on P.perno = B.fk_perno	
		)		
		where rno between #{startRno} and #{endRno}
		
   	</select>
    
    <!-- 검색어 입력시 자동글 완성하기 -->
	<select id="wordSearchShow" parameterType="HashMap" resultType="String">
		<choose> 
    		<when test="searchType eq 'name'">
    			select  distinct ${searchType} as name
    		</when>
    		<otherwise>
    			select  ${searchType}    
    		</otherwise>     		
    	</choose>   		        
		 from
		(
		    select subject,fk_perno, seq
		    from tbl_board
		    where status = 1 and categoryno = #{categoryno}
		)B
		join tbl_person P
		on P.perno = B.fk_perno
		where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
	    <if test="searchType neq 'name'">
  		order by seq desc
  		</if>   		    	  	    	
	</select>
	
	<!-- 글 1개 보여주기 -->
	<select id="getView" parameterType="String" resultType="com.spring.finalproject3.yeonha.BoardVO">
		select previousseq, previoussubject
		     , seq, fk_perno, subject, name, content, readcount, B.regDate
		     , nextseq , nextsubject, commentCount
		     , groupno, fk_seq, depthno, fileName, orgFilename, fileSize
		from 
		(
		    select lag(seq,1) over(order by seq desc) AS previousseq
		         , lag(subject,1) over(order by seq desc) AS previoussubject
		         
		         , seq, fk_perno, subject, content, readcount, commentCount
		         , to_char(regDate, 'yyyy-mm-dd') as regDate
		         
		         , lead(seq,1) over(order by seq desc) AS nextseq
		         , lead(subject,1) over(order by seq desc) AS nextsubject
		         
		         , groupno, fk_seq, depthno, fileName, orgFilename, fileSize
		         ,  commentCount
		    from tbl_board
		    where status = 1
		    <if test='searchType != "" and searchWord != ""'>
            and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
          	</if>
		)B
		join tbl_person P
		on P.perno = B.fk_perno
		where B.seq = #{seq}
	</select>
	
	<!-- 글조회수 1증가 하기 -->
	<update id="setAddReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1 
		where seq = #{seq}
	</update>
	
	<!-- 댓글쓰기 -->
	<insert id="addComment" parameterType="com.spring.finalproject3.yeonha.CommentVO">
		insert into tbl_comment(comseq, fk_seq, fk_perno, content, reregDate, status)
		values(commentSeq.nextval, #{fk_seq}, #{fk_perno}, #{content}, default, default)
	</insert>
	
	<!-- tbl_board 테이블에 commentCount 컬럼의 값을 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update tbl_board set commentCount = commentCount + 1
		where seq = #{fk_seq} 
	</update>
    
	
	<!-- 원게시물에 딸린 댓글들을 페이징처리해서 조회해오기(Ajax 로 처리) -->
   	<select id="getCommentListPaging" parameterType="HashMap" resultType="com.spring.finalproject3.yeonha.CommentVO">
   		select name, identity, content, reregDate, comseq
		from
		(
		    select rno, name, identity, content, reregDate, comseq 
		    from
		    (
		        select row_number() over(order by comseq desc) as rno, fk_perno, content, to_char(reregDate, 'yyyy-mm-dd') AS reregDate
		        	   , comseq 
		        from tbl_comment
		        where status = 1 and fk_seq = #{fk_seq}
		        order by comseq desc
		    )C
		    join tbl_person P
		    on P.perno = C.fk_perno
		) V
		where rno between #{startRno} and #{endRno}
   	</select>
   	
   	<!-- 원게시물에 딸린 댓글 totalPage 알아오기 (Ajax 로 처리) -->
   	<select id="getCommentTotalPage" parameterType="HashMap" resultType="int">
   		select ceil(count(*)/#{sizePerPage})
		from tbl_comment
		where status = 1 and fk_seq = #{fk_seq}
   	</select>
   	
   	<!-- 글 1개 보여주기 -->
	<select id="getViewNo" parameterType="String" resultType="com.spring.finalproject3.yeonha.BoardVO">
		select previousseq, previoussubject
		     , seq, fk_perno, subject, name, content, readcount, B.regDate
		     , nextseq , nextsubject, commentCount
		from 
		(
		    select lag(seq,1) over(order by seq desc) AS previousseq
		         , lag(subject,1) over(order by seq desc) AS previoussubject
		         
		         , seq, fk_perno, subject, content, readcount, commentCount
		         , to_char(regDate, 'yyyy-mm-dd') as regDate
		         
		         , lead(seq,1) over(order by seq desc) AS nextseq
		         , lead(subject,1) over(order by seq desc) AS nextsubject
		    from tbl_board
		    where status = 1
		)B
		join tbl_person P
		on P.perno = B.fk_perno
		where B.seq = #{seq}
	</select>
	
	<!-- 게시글 수정하기 -->
	<update id="edit" parameterType="com.spring.finalproject3.yeonha.BoardVO">
		update tbl_board set subject = #{subject}
		                   , content = #{content}
		where seq = #{seq}
	</update>
   	
   	<!-- 게시글 삭제하기 -->
	<delete id="del" parameterType="int">
		delete from tbl_board 
		where seq = #{seqno}
	</delete>	
	
	<!-- 댓글 조회하기 -->
	<select id="getComment" parameterType="String">
	select comseq, fk_perno
	from tbl_comment
	where status = 1 and comseq = #{comseq}
	</select>
	
	<!-- 게시글 삭제하기 -->
	<delete id="delcomment" parameterType="int">
		delete from tbl_comment 
		where comseq = #{comseq}
	</delete>
	
	<!-- tbl_board 테이블에서 groupno 컬럼의 최대값 구하기 -->
	<select id="getGroupnoMax" resultType="int">
	    select nvl(max(groupno), 0)
		from tbl_board
	</select>
	
	<!-- 글쓰기(파일첨부가 있는 글쓰기) -->
	<insert id="add_withFile" parameterType="com.spring.finalproject3.yeonha.BoardVO">
		<if test='fk_seq.equals("")'>
			insert into tbl_board(seq, fk_perno, subject, content, categoryno, good, readCount, regDate, status, commentCount, namecheck, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
			values(boardSeq.nextval, #{fk_perno}, #{subject}, #{content}, #{categoryno}, default, default, default, default, default, #{namecheck}, #{groupno}, default, default, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
		
		<if test='!fk_seq.equals("")'>
			insert into tbl_board(seq, fk_perno, subject, content, categoryno, good, readCount, regDate, status, commentCount, namecheck, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
			values(boardSeq.nextval, #{fk_perno}, #{subject}, #{content}, #{categoryno}, default, default, default, default, default, #{namecheck}, #{groupno}, #{fk_seq}, #{depthno}+1, #{fileName}, #{orgFilename}, #{fileSize})  
		</if>
	</insert>
	

</mapper>