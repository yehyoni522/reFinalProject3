<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminmember">

	<resultMap type="HashMap" id="adminsudentMap">
		<result property="FK_MAJSEQ" column="fk_majseq" javaType="String" />
		<result property="PERNO" column="perno" javaType="String" />
		<result property="NAME" column="name" javaType="String" />
		<result property="BIRTHDAY" column="birthday" javaType="String" />
		<result property="MOBILE" column="mobile" javaType="String" />
		<result property="EMAIL" column="email" javaType="String" />
		<result property="CONTENT" column="content" javaType="String" />
	</resultMap>
	
	<!-- 관리자페이지 회원관리 학생목록보기 -->
	<select id="getAdminStudent" parameterType="HashMap" resultMap="adminsudentMap">
		select fk_majseq, perno, name, mobile, email, content , rno, birthday
		from        
		(        
		    select fk_majseq, perno, name, mobile, email, content , birthday,
		           row_number() over(order by perno desc) as rno     
		    from tbl_person p join tbl_major m
		    on p.fk_majseq = m.MAJSEQ
		    where idle = 0 and identity = 0
		    <if test='searchWord != ""'>
		    and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
		    </if>
		)v
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- === 총 학생 수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
   	<select id="getTotalCount" parameterType="HashMap" resultType="int">
   		select count(*)
		from tbl_person p join tbl_major m
		on p.fk_majseq = m.MAJSEQ
		where idle = 0 and identity = 0
   		<if test='searchWord != ""'>
   			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
   		</if>
   	</select>
   	
   	<select id="getStudentView" parameterType="String" resultType="com.spring.finalproject3.seongkyung.model.PersonVO">
   		select perno, name, birthday, mobile, email, address
		from tbl_person
		where idle = 0 and identity = 0 and perno = #{PERNO}
   	</select>

	<!-- === 총 학생 수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
   	<select id="getProfessorTotalCount" parameterType="HashMap" resultType="int">
   		select count(*)
		from tbl_person p join tbl_major m
		on p.fk_majseq = m.MAJSEQ
		where idle = 0 and identity = 1
   		<if test='searchWord != ""'>
   			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
   		</if>
   	</select>
   	
   	<!-- 관리자페이지 회원관리 교수목록보기 -->
	<select id="getAdminProfessor" parameterType="HashMap" resultMap="adminsudentMap">
		select fk_majseq, perno, name, mobile, email, content , rno, birthday
		from        
		(        
		    select fk_majseq, perno, name, mobile, email, content , birthday,
		           row_number() over(order by perno desc) as rno     
		    from tbl_person p join tbl_major m
		    on p.fk_majseq = m.MAJSEQ
		    where idle = 0 and identity = 1
		    <if test='searchWord != ""'>
		    and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
		    </if>
		)v
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 쪽지시험 필드 생성 -->
	<insert id="addquiz" parameterType="String">
		insert into tbl_quiz(quizno, quizname, fk_subno)
		values(quizSeq.nextval, #{quizname}, 1000)
	</insert>
	
	<!-- 쪽지시험 테이블에서 시험명으로 쪽지시험 일련번호를 검색 -->
	<select id="getquiz" parameterType="String" resultType="com.spring.finalproject3.seongkyung.model.QuizVO">
		select quizno, quizname, fk_subno, quizday
		from tbl_quiz
		where quizname = #{quizname}
	</select>
	
	<!-- 쪽지시험_문제  필드 생성 -->
	<insert id="addquestion" parameterType="HashMap">
		insert into tbl_question(questionno, fk_quizno, qzno, qzcontent, answerfirst, answersecond, answerthird, answerfourth)
		values(questionSeq.nextval, #{fk_quizno}, #{qzno}, #{qzcontent}, #{answerfirst}, #{answersecond}, #{answerthird}, #{answerfourth})
	</insert>
	
	<!-- 쪽지시험_문제_문제번호로 문제일련번호 검색  -->
	<select id="getquestion" parameterType="HashMap" resultType="com.spring.finalproject3.seongkyung.model.QuestionVO">
		select questionno, fk_quizno, qzno, qzcontent, answerfirst, answersecond, answerthird, answerfourth
		from tbl_question
		where qzno = #{qzno} and fk_quizno = #{fk_quizno}
	</select>
	
	<!-- 쪽지시험_정답 필드 생성  -->
	<insert id="addquizans" parameterType="HashMap">
		insert into tbl_quizans(quizansno, fk_quizno, fk_questionno, quizanswer)
		values(quizanswerSeq.nextval, #{fk_quizno}, #{fk_questionno}, #{quizanswer})
	</insert>
	
	<resultMap type="HashMap" id="QuizListMap">
		<result property="quizname" column="quizname" javaType="String" />
		<result property="quizday" column="quizday" javaType="String" />
		<result property="subname" column="subname" javaType="String" />
		<result property="name" column="name" javaType="String" />
		<result property="quizno" column="quizno" javaType="String" />
	</resultMap>
	
	<!-- === 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) === -->
	<select id="quizvoListSearchWithPaging" parameterType="HashMap" resultMap="QuizListMap">
		select rno, quizname, quizday, subname, name, quizno
		from
		(            
		     SELECT row_number() over(order by quizno desc) as rno, 
		           A.quizname AS quizname, to_char(A.quizday, 'yyyy-mm-dd') AS quizday, S.subname AS subname, C.name AS name, quizno
		     FROM tbl_quiz A JOIN tbl_subject S
		     ON fk_subno = subno
		     JOIN tbl_person c
		     ON fk_perno = perno   
		     where a.fk_subno = #{subno}  
		) V
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 총 쪽지시험 수(totalCount) -->
	<select id="getTotalQuiz" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_quiz join tbl_subject
		ON fk_subno = subno
		where fk_subno = #{subno}
	</select>
	
	<!-- 받아온 시험명으로 과목명 검색하기 -->
	<select id="getSubname" parameterType="String" resultType="com.spring.finalproject3.seongkyung.model.SubjectVO">
		select subname
		from tbl_subject
		where subno = (select fk_subno from tbl_quiz where quizname = #{quizname})
	</select>
	
	<!-- 받아온 시험명으로 문제리스트 검색 -->
	<select id="getQuestionList" parameterType="String" resultType="com.spring.finalproject3.seongkyung.model.QuestionVO">
		select qzno, qzcontent, answerfirst, answersecond, answerthird, answerfourth, questionno
		from tbl_question
		where fk_quizno = (select quizno from tbl_quiz where quizname = #{quizname})	
	</select>
	
	<!-- 가져온 시험명으로 문제의 총 갯수를 구한다. -->
	<select id="getQuizTotalCount" parameterType="String" resultType="int">
		select count(*)
		from tbl_question
		where fk_quizno = (select quizno from tbl_quiz where quizname = #{quizname})
	</select>
	
	<!-- 시험명으로 일련번호 검색 -->
	<select id="getQuizNo" parameterType="HashMap" resultType="com.spring.finalproject3.seongkyung.model.QuizVO">
		select quizno, quizname, fk_subno, quizday 
		from tbl_quiz 
		where quizname = #{quizname}
	</select>
	
	<!-- 시험명과 문제번호로 문제 일련번호 검색 -->
	<select id="getQuestionNo" parameterType="HashMap" resultType="com.spring.finalproject3.seongkyung.model.QuestionVO">
		select questionno, fk_quizno, qzno, qzcontent, answerfirst, answersecond, answerthird, answerfourth
		from tbl_question
		where fk_quizno = (select quizno from tbl_quiz where quizname = #{quizname}) and qzno = #{qzno}
	</select>
	
	<!-- 일련번호, 문제일련번호, 사람번호를 구했으면 그 값을 가지고 insert -->
	<insert id="addStudentAnswer" parameterType="HashMap"> 
		insert into tbl_stdtans (stdtanswerno, fk_perno, fk_quizno, fk_questionno, stdtanswer)
		values(stdtansSeq.nextval, #{perno}, #{quizno}, #{questionno}, #{stdtanswer})
	</insert>
	
	<!-- 과목번호로 해당 과목을 수강하는 학생들의 정보만 얻어온다. -->
	<select id="getStudentList" parameterType="HashMap" resultType="com.spring.finalproject3.seongkyung.model.PersonVO">
		select perno, name
		from tbl_person
		where perno = (select fk_perno from tbl_class where fk_subno = #{subno})
	</select>
	
	
</mapper>