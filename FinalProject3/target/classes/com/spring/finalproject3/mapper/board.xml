<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board">
    
    <!-- 글쓰기  -->
    <insert id="add" parameterType="com.spring.finalproject3.yeonha.BoardVO">
		insert into tbl_board(seq, fk_perno, subject, content, categoryno, good, readCount, regDate, status, commentCount, namecheck)
		values(boardSeq.nextval, #{fk_perno}, #{subject}, #{content}, #{categoryno}, default, default, default, default, default, #{namecheck}) 	
	</insert>
	
	<!-- === #116. 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
   	<select id="getTotalCount" parameterType="HashMap" resultType="int">
   		select count(*)
   		from tbl_board
   		where status = 1 and categoryno = #{categoryno}
   		<if test='searchWord != ""'>
   			and lower(${searchType}) like '%'||lower(#{searchWord}) || '%'	
   		</if>
   	</select>
   	
    <!-- 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함 한것) -->
   	<select id="boardListSearchWithPaging" parameterType="HashMap" resultType="com.spring.finalproject3.yeonha.BoardVO">  		
   		select B.seq as seq, B.subject as subject, B.good as good, B.readCount as readCount, B.regDate as regDate, P.name as name
   				, B.commentCount as commentCount, B.namecheck as namecheck
		from
		(
		    select row_number() over(order by seq desc) as rno, seq, subject, good, readCount, commentCount, fk_perno  
					   , to_char(regDate, 'yyyy/mm/dd') as regDate, categoryno, namecheck
		    from tbl_board
		    where status = 1 and categoryno = #{categoryno}
		    <if test='searchWord != ""'>
		    and lower(${searchType}) like '%'||lower(#{searchWord})||'%' 
		    </if>
		    <if test="newhit eq 2">
			order by good desc, seq desc  
			</if>
		)B
		join tbl_person P
		on P.perno = B.fk_perno		
		where rno between #{startRno} and #{endRno}
		
   	</select>
    
    <!-- 검색어 입력시 자동글 완성하기 -->
	<select id="wordSearchShow" parameterType="HashMap" resultType="String">
		<choose> 
    		<when test="searchType eq 'name'">
    			select  distinct ${searchType}
    		</when>
    		<otherwise>
    			select  ${searchType}    
    		</otherwise>     		
    	</choose>   
    	from tbl_board
     	where status = 1
     	and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
     	<if test="searchType neq 'name'">
     		order by seq desc
     	</if> 	  		        
		<!-- from
		(
		    select subject,fk_perno, seq
		    from tbl_board
		    where status = 1 and categoryno = 1
    
		)B
		join tbl_person P
		on P.perno = B.fk_perno
		where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%';	
	    <if test="searchType neq 'name'">
  		order by seq desc
  		</if>   		 -->     	  	    	
	</select>
	
	<!-- (댓글쓰기가 없는 게시판에서) 글 1개 보여주기 -->
	<select id="getView" parameterType="String" resultType="com.spring.finalproject3.yeonha.BoardVO">
		select previousseq, previoussubject
		     , seq, fk_perno, subject, name, content, readcount, B.regDate
		     , nextseq , nextsubject
		from 
		(
		    select lag(seq,1) over(order by seq desc) AS previousseq
		         , lag(subject,1) over(order by seq desc) AS previoussubject
		         
		         , seq, fk_perno, subject, content, readcount
		         , to_char(regDate, 'yyyy/mm/dd') as regDate
		         
		         , lead(seq,1) over(order by seq desc) AS nextseq
		         , lead(subject,1) over(order by seq desc) AS nextsubject
		    from tbl_board
		    where status = 1
		)B
		join tbl_person P
		on P.perno = B.fk_perno
		where B.seq = #{seq}
	</select>
	
	<!-- 글조회수 1증가 하기 -->
	<update id="setAddReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1 
		where seq = #{seq}
	</update>
	
    
</mapper>