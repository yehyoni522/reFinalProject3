<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="classBoard">

	<!-- === 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
	<select id="getTotalAssign" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_assgn 
		where fk_subno=#{subno}
	</select>
	
	
	<!-- === 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) === -->
	<select id="assignListSearchWithPaging" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.assignmentBoardVO">
		<!-- select assgnno, subject, deadline, submitcount, fileName
			from
			(
				select row_number() over(order by assgnno desc) as rno,
	                    assgnno,subject, submitcount, A.fileName as fileName,
				        to_char(deadline, 'yyyy-mm-dd hh24:mi:ss') as deadline
				from tbl_assgn A left join tbl_submit S
	            on assgnno = fk_assgnno
	        where A. fk_subno=#{subno}
			)V
			where rno between #{startRno} and #{endRno} -->
			
		<if test="identity eq 0">
			select assgnno,subject, deadline, status, score, fileName
			from
			(
			    select row_number() over(order by assgnno desc) as rno,assgnno, subject, fileName, 
			    		to_char(deadline, 'yyyy-mm-dd hh24:mi:ss') as deadline, S.status, S.score
			    from tbl_assgn A left outer join 
			    (select fk_assgnno, score, status from tbl_submit where fk_perno=#{perno}) S
			    on A.assgnno = S.fk_assgnno
			    where fk_subno=#{subno}
			) V
			where rno between #{startRno} and #{endRno}
		</if>
		<if test="identity != 0">
			select assgnno, subject, deadline, submitcount, fileName
			from
			(
	            select row_number() over(order by assgnno desc) as rno, assgnno, subject,fileName,
	                to_char(deadline, 'yyyy-mm-dd hh24:mi:ss') as deadline, submitcount
	            from tbl_assgn
	            where fk_subno=#{subno}
			)V
			where rno between #{startRno} and #{endRno}
		</if>	
	</select>
	
	<!-- 현재 글 시퀀스 알아오기 -->
	<select id="getAssignno" resultType="String">
		SELECT assgnno_seq.CURRVAL FROM DUAL
	</select>
	

	<!-- === 과제 게시판 글쓰기(파일첨부가 없는 글쓰기) === -->
   <insert id="assignmentAdd" parameterType="com.spring.finalproject3.seoyeon.model.assignmentBoardVO">
		insert into tbl_assgn(assgnno, fk_perno,fk_subno,subject ,content, deadline)
		values(assgnno_seq.nextval, #{fk_perno}, #{fk_subno},#{subject}, #{content},#{deadline})
   </insert>


	<!-- 해당 수업 듣는 학생들의 총 perno 리스트  -->
	<select id="pernoList" parameterType="String" resultType="String">
		select fk_perno
		from tbl_class
		where fk_subno = #{fk_subno}
	</select>
	
	
	<!-- 과제 게시판 글쓰면 학생들한테 과제 부여하기 -->
	<select id="assgnStudent" parameterType="HashMap" resultType="int" >
		insert into tbl_submit 
		(submitno, fk_perno, fk_subno, fk_assgnno, score, status)
		values(submitno_seq.nextval, #{fk_perno}, #{fk_subno}, #{fk_assgnno}, default, default)
	</select>
		

	<!-- === 어떤 과목인지 과목번호 알아오기  === -->
	<select id="getSubjectname" parameterType="String" resultType="String">
		select distinct subname
		from tbl_assgn A join tbl_subject S
		on fk_subno=subno
		where fk_subno = #{subno}
	</select>
	
	
	<!-- === 해당 수업을 듣는 학생의 총 인원수 알아오기(교수 총 수강인원 나타낼때 필요) === -->
	<select id="getTotalPerson" parameterType="String" resultType="String">
		select count(*)
		from tbl_class
		where fk_subno = #{subno}
	</select>

	<!-- === 글 1개 조회해오기 === -->
	<select id="assignmentView" parameterType="String" resultType="com.spring.finalproject3.seoyeon.model.assignmentBoardVO">
		select previousseq, previoussubject
		   , assgnno, fk_perno, subject, content, regDate, deadline
		   , nextseq , nextsubject, fileName, orgFilename, fileSize
		from 
		(
		  select lag(assgnno,1) over(order by assgnno desc) AS previousseq
		       , lag(subject,1) over(order by assgnno desc) AS previoussubject
		       
		       , assgnno, fk_perno, subject, content
		       , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		       , to_char(deadline, 'yyyy-mm-dd hh24:mi:ss') as deadline
		       
		       , lead(assgnno,1) over(order by assgnno desc) AS nextseq
		       , lead(subject,1) over(order by assgnno desc) AS nextsubject   
		       
		       , fileName, orgFilename, fileSize 
		  from tbl_assgn
		) V
		where V.assgnno = #{assgnno}
	</select>
	
	<!-- === 1개글 수정하기 === -->
	<update id="assignmentEdit" parameterType="com.spring.finalproject3.seoyeon.model.assignmentBoardVO">
		update tbl_assgn set subject = #{subject}, deadline=#{deadline}
		                   , content = #{content}
		where assgnno = #{assgnno}
	</update>
	
	<!-- === 1개글 삭제하기 === -->
	<delete id="assignmentDelete" parameterType="String">
		delete from tbl_assgn 
		where assgnno = #{assgnno}
	</delete>	
	
	<!-- 과제 제출 댓글쓰기(tbl_submit 테이블에 insert) === -->
	<insert id="addSubmit" parameterType="com.spring.finalproject3.seoyeon.model.SubmitVO">
		<!-- 첨부파일이 없는 경우 -->
		<if test="fileName == null">
		insert into tbl_submit(submitno, fk_perno, fk_subno, fk_assgnno, content, status)
		values(submitno_seq.nextval, #{fk_perno}, #{fk_subno}, #{fk_assgnno}, #{content}, 1)
		</if>
		
		<!-- 첨부파일이 있는 경우 -->
		<if test="fileName != null">
		insert into tbl_submit(submitno, fk_perno, fk_subno, fk_assgnno, content, status, fileName, orgFilename, fileSize)
		values(submitno_seq.nextval, #{fk_perno}, #{fk_subno}, #{fk_assgnno}, #{content}, 1, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
	</insert>
	
	<!--  === tbl_assgn 테이블에 commentCount 컬럼의 값을 1증가(update) === -->
	<update id="updateSubmitCount" parameterType="String">
		update tbl_assgn set submitCount = submitCount + 1
		where assgnno = #{assgnno} 
	</update>
	
	<!-- === 원게시물에 딸린 댓글들을 페이징처리해서 조회해오기(Ajax 로 처리) ===  --> 
	<select id="getSubmitListPaging" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.SubmitVO">
		select submitno, name as submitName,fk_perno, content, submitdate,fileName, orgFilename, fileSize,score
		from 
		(
		    select row_number() over(order by submitno desc) as rno,score,submitno, name, content, to_char(submitdate, 'yyyy-mm-dd hh24:mi:ss') as submitdate 
		     , nvl(fileName,' ') AS fileName, fk_perno
				     , nvl(orgFilename, ' ') AS orgFilename
				     , nvl(to_char(fileSize), ' ') AS fileSize  
		    from tbl_submit S join tbl_person p
		    on fk_perno = perno
		    where fk_assgnno = #{fk_assgnno}
		) V 
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!--  === 원게시물에 딸린 댓글 totalPage 알아오기 (Ajax 로 처리) === -->
	<select id="getSubmitTotalPage" parameterType="HashMap" resultType="int">
		select ceil(count(*) / #{sizePerPage})
		from tbl_submit
		where fk_assgnno = #{fk_assgnno}
	</select>
	
	<!-- === 학생이 과제 제출했는지 확인하기 -->
	<select id="studentSubmit" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_submit join tbl_person
		on fk_perno = perno
		where fk_assgnno=#{assgnno} and perno=#{perno}
	</select>
	
	<!-- === 학생)댓글  조회하기 (Ajax 로 처리) === // -->
	<select id="mysubmitList" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.SubmitVO">
	    select submitno,fk_perno, name as submitName, content, to_char(submitdate, 'yyyy-mm-dd hh24:mi:ss') as submitdate 
	    	, nvl(fileName,' ') AS fileName
		     , nvl(orgFilename, ' ') AS orgFilename
		     , nvl(to_char(fileSize), ' ') AS fileSize     
	    from tbl_submit S join tbl_person p
	    on fk_perno = perno
	    where fk_assgnno = #{fk_assgnno} and perno=#{perno}
	</select>
	
	<!-- === 원글 또는 답변글 글쓰기(파일첨부가 있는 글쓰기) === -->
	<insert id="assignmentAdd_withFile" parameterType="com.spring.finalproject3.seoyeon.model.assignmentBoardVO">	   
	    insert into tbl_assgn(assgnno, fk_perno,fk_subno,subject ,content, deadline, fileName, orgFilename, fileSize)
		values(assgnno_seq.nextval, #{fk_perno}, #{fk_subno},#{subject}, #{content},#{deadline}, #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	<!-- 과제 제출 댓글쓰기(tbl_submit 테이블에 insert) === -->
	<insert id="addSubmit_withFile" parameterType="com.spring.finalproject3.seoyeon.model.SubmitVO">
		insert into tbl_submit(submitno, fk_perno, fk_subno, fk_assgnno, content, status, fileName, orgFilename, fileSize)
		values(subno.nextval, #{fk_perno}, #{fk_subno}, #{fk_assgnno}, #{content}, 1, #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	<!-- 댓글 1개 조회 -->
	<select id="getCommentOne" parameterType="String" resultType="com.spring.finalproject3.seoyeon.model.SubmitVO">
		select fileName, orgFilename
		from tbl_submit
		where submitno = #{submitno}
	</select>
	
	
	<!-- === 질문게시판) 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
	<select id="getTotalQna" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_QnA join tbl_person
		on fk_perno = perno
		where fk_subno=#{subno}
		<if test='searchWord != "" '>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>
	</select>
	
	
	<!-- === 질문게시판) 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) === -->
	<select id="qnaListSearchWithPaging" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.QnAVO">
		
		select qnano,subject,answer,name,regDate,fk_perno,groupno, fk_qnano, depthno  
		from
		(
		    select rownum as rno, 
		            qnano,subject,answer,name,regDate,fk_perno,groupno, fk_qnano, depthno  
				from
				(
					select qnano,subject,answer,name, fk_perno,groupno, fk_qnano, depthno,
					        to_char(Q.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
					from tbl_QnA Q left join tbl_person P
		            on fk_perno = perno
		            where Q.fk_subno=#{subno}
		            <if test='searchWord != "" '>
					    and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
					</if>
		            start with fk_qnano=0
		            connect by prior qnano=fk_qnano
		            order siblings by groupno desc, qnano asc
				)V
		    )T
		where rno between #{startRno} and #{endRno}
	</select>
	

	<!-- === 질문게시판) 게시판 글쓰기(파일첨부가 없는 글쓰기) === -->
   	<insert id="qnaAdd" parameterType="com.spring.finalproject3.seoyeon.model.QnAVO">
		<if test='fk_qnano.equals("")'>
	    	insert into tbl_QnA(qnano,fk_subno,fk_perno,subject,content,regDate,status,groupno,fk_qnano,depthno)
			values(qnano.nextval, #{fk_subno}, #{fk_perno}, #{subject},#{content},default,default,#{groupno},default,default)
		</if>
		
		<if test='!fk_qnano.equals("")'>
	    	insert into tbl_QnA(qnano,fk_subno,fk_perno,subject,content,regDate,status,groupno,fk_qnano,depthno)
			values(qnano.nextval, #{fk_subno}, #{fk_perno}, #{subject},#{content},default,default,#{groupno},#{fk_qnano},#{depthno}+1)
		</if>	
	</insert>
	
	
	<!-- === groupno 컬럼의 최대값 구하기 === -->
	<select id="getGroupnoMax" resultType="int">
	    select nvl(max(groupno), 0)
	  	from tbl_QnA
	</select>
	
	<!-- (댓글 및 답변글 쓰기 게시판에서)글 1개 보여주기  == -->
	<select id="getQnaView" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.QnAVO">
		select qnano, fk_perno, name, subject, content, answer
		     , to_char(Q.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate		         
		     , groupno, fk_qnano, depthno
		from tbl_QnA Q join tbl_person P
		on fk_perno = perno
		where Q.status = 1 and qnano = #{qnano}	
   	</select> 
	
	<!-- 질문답변하면 질문글에 answer +1 하기 -->
	<select id="updateAnswerCount" parameterType="String">
		update tbl_QnA set answer = answer+1
		where qnano = #{fk_qnano}
	</select>
	
	<!-- === 질문게시판 1개글 수정하기 === -->
	<update id="qnaEdit" parameterType="com.spring.finalproject3.seoyeon.model.QnAVO">
		update tbl_QnA set subject = #{subject}, content = #{content}
		where qnano = #{qnano} 
	</update>
	
	<!-- 질문답변 삭제하면 answer -1 하기 -->
	<select id="updateAnswerMinus" parameterType="String">
		update tbl_QnA set answer = answer-1
		where qnano = #{fk_qnano}
	</select>

	<!-- === 1개글 삭제하기 === -->
	<delete id="qnaDelete" parameterType="String">
		delete from tbl_QnA 
		where qnano = #{qnano}
	</delete>

	<!-- 댓글 1개 조회 -->
	<select id="getSubmitOne" parameterType="String" resultType="com.spring.finalproject3.seoyeon.model.SubmitVO">
		select fileName, orgFilename
		from tbl_submit
		where submitno = #{submitno}
	</select>

	<!-- 점수 변경하기 -->
	<update id="changeScore" parameterType="HashMap">
		update tbl_submit set score = #{score}
		where submitno = #{submitno}
	</update>
	
	<!-- 질문) 원글 글쓴이 perno 받아오기 -->
	<select id="getOrgPerno" parameterType="String" resultType="String">
		select fk_perno
		from tbl_qna
		where qnano=(select fk_qnano from tbl_qna where qnano=#{qnano})
	</select>

	<!-- 자료) 총 갯수 -->
	<select id="getTotalMaterial" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_material
		<if test='searchWord != "" '>
			where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>
	</select>
	
	<!-- 자료) 페이징처리한 목록 가져오기 -->
	<select id="materialListSearchWithPaging" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.materialVO">
	select mtrno, subject, regDate, readCount, fileName
			from
			(
			    select row_number() over(order by mtrno desc) as rno, mtrno, subject, fileName, readCount,
			    		to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
			    from tbl_material
			    where fk_subno=#{subno}
			    <if test='searchWord != "" '>
				    and lower(${searchType}) like '%'||lower(#{searchWord})||'%'
				</if>
			) V
			where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 자료) 첨부파일 없는 글쓰기 -->
	<insert id="materialAdd" parameterType="com.spring.finalproject3.seoyeon.model.materialVO">
		insert into tbl_material(mtrno, fk_perno,fk_subno,subject ,content)
		values(mtrno_seq.nextval, #{fk_perno}, #{fk_subno}, #{subject}, #{content})
	</insert>
	
	<!-- 자료) 첨부파일 있는 글쓰기 -->
	<insert id="materialAdd_withFile" parameterType="com.spring.finalproject3.seoyeon.model.materialVO">
		insert into tbl_material(mtrno, fk_perno,fk_subno,subject ,content, fileName, orgFilename, fileSize)
		values(mtrno_seq.nextval, #{fk_perno}, #{fk_subno}, #{subject}, #{content}, #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	<!-- 자료) 글 상세 보기 -->
	<select id="materialView" parameterType="HashMap" resultType="com.spring.finalproject3.seoyeon.model.materialVO">
		select previousseq, previoussubject
		   , mtrno, fk_perno, subject, content, regDate
		   , nextseq , nextsubject, fileName, orgFilename, fileSize
		from 
		(
		  select lag(mtrno,1) over(order by mtrno desc) AS previousseq
		       , lag(subject,1) over(order by mtrno desc) AS previoussubject
		       
		       , mtrno, fk_perno, subject, content
		       , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		       
		       , lead(mtrno,1) over(order by mtrno desc) AS nextseq
		       , lead(subject,1) over(order by mtrno desc) AS nextsubject   
		       
		       , fileName, orgFilename, fileSize 
		  from tbl_material
		  <if test='searchType != "" and searchWord != ""'>
             where lower(${searchType}) like '%'||lower(#{searchWord})||'%'
          </if>
		) V
		where V.mtrno = #{mtrno}
	</select>
	
	<!-- 자료) 조회수 증가 -->
	<update id="materialAddReadCount" parameterType="String">
	 	update tbl_material set readCount = readCount + 1 
      	where mtrno = #{mtrno}
	</update>
	
	<!-- 자료) 글 수정하기 -->
	<update id="materialEdit" parameterType="com.spring.finalproject3.seoyeon.model.materialVO">
		update tbl_material set subject = #{subject}
			, content = #{content}	
      	where mtrno = #{mtrno}
    </update>
	
	<!-- 자료) 글 삭제하기 -->
	<delete id="materialDelete" parameterType="HashMap">
		delete from tbl_material 
		where mtrno = #{mtrno}
	</delete>
	
	<!-- 자료) 글 검색어 입력시 자동글 완성하기 -->
	<select id="materialWordSearchShow" parameterType="HashMap" resultType="String">
        	select ${searchType}
			from tbl_material
  			where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
	</select>
	

	<!-- 계획) 내용물 추출해오기 -->
	<select id="getInfo" parameterType="String" resultType="com.spring.finalproject3.seoyeon.model.planVO">
		select V.subno,subname,credit,semeter as semester,day,time,subcol,submajor,name,mobile,email,col,major
		from
		(select subno, subname, credit, semeter, day, time, colname as subcol, content as submajor
		from tbl_subject S 
		join tbl_major M
		on S.fk_majseq = M.majseq
		join tbl_college C
		on M.fk_colno = colno
		) V
		join
		(
		select s.subno,name, mobile,email, colname as col, content as major
		from tbl_subject S
		join tbl_person P
		on S.fk_perno=P.perno
		join TBL_major M
		on majseq= P.fk_majseq
		join tbl_college C
		on colno = M.fk_colno
		) M
		on V.subno=M.subno
		where V.subno=#{subno}
	</select>

	<!-- 계획) 글계획주차 -->
	<select id="getPlan" parameterType="String" resultType="com.spring.finalproject3.seoyeon.model.planVO">
		select planno,content,etc
		from tbl_plan
		where fk_subno=#{subno}
		order by planno asc
	</select>

	<!-- 계획) 강의 계획서 등록하기 완료 -->
	<insert id="planAdd" parameterType="HashMap">
		insert into tbl_plan values(#{planno}, #{subno}, #{content}, #{etc})
	</insert>
	
		<!-- 계획) 강의 계획서 수정하기 완료 -->
	<update id="planEdit" parameterType="HashMap">
		update tbl_plan set content = #{content}, etc = #{etc}
		where planno = #{planno} and fk_subno = #{subno}
	</update>

</mapper>